---
description: Applies documentation improvement rules.
globs:
alwaysApply: false
---
# Documentation Improvements Rules

## 1. Information Architecture & Organization
- Structure documentation hierarchically with clear sections (e.g., About, Get Started, Guides, Reference).
- Organize content by user needs and experience levels.
- Use progressive disclosure: present information from overview to detailed implementation.
- Provide multiple navigation paths for different user types.

## 2. Content Expansion & Depth
- Ensure comprehensive coverage of all relevant topics.
- Expand existing guides and add new content areas as needed (e.g., troubleshooting, glossary, tutorials).
- Include detailed installation, QuickStart, and feature guides.

## 3. User Experience & Accessibility
- Design documentation for different user personas (developers, data scientists, DevOps).
- Ensure content is accessible to users with varying technical backgrounds.
- Provide clear examples, code snippets, and visual aids.
- Include step-by-step instructions for complex processes.

## 4. Maintenance & Updates
- Establish regular review cycles for documentation accuracy.
- Keep documentation synchronized with code changes and releases.
- Implement feedback mechanisms for user suggestions and issues.
- Maintain version control and change tracking for documentation.

## 5. Technical Capabilities
- Document configuration systems, validation rules, and CLI integration in detail.
- Provide environment-specific guidance and resource management strategies.
- Cover packaging, deployment, and reproducibility best practices.

## 6. Developer Experience
- Offer comprehensive installation and setup instructions for all environments.
- Include hands-on tutorials and QuickStart guides with real-world examples.
- Integrate troubleshooting guidance throughout.

## 7. Reference Documentation
- Maintain complete and up-to-date CLI and API references with usage examples.
- Document common issues, error messages, and debugging techniques.
- Provide clear support and feedback channels.

## 8. Content Quality
- Align documentation with source code and ensure technical accuracy.
- Use clear, accessible language and consistent terminology.
- Present information logically and progressively.
- Regularly verify documentation against source code.
